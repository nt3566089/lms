package routines;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import java.text.ParseException;
/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class DateRelationRoutines {

    /**
     * タイムゾーン変換処理
     * 
     * {talendTypes} String
     * 
     * {Category} DateRelationRoutines
     * 
     * {param} String:yyyyMMddHHmmss
     *         String:timeZone(ex:'Asia/Tokyo' 'Europe/London'...)
     * 
     * {example} chageDateTimebyTimeZone('20171231012033','Europe/London')
     */
    public static String chageDateTimebyTimeZone(String dateTime, String timeZone) {
    	//SDF定義
    	SimpleDateFormat fmtDateTime = new SimpleDateFormat("yyyyMMddHHmmss");
    	SimpleDateFormat fmtTimeZone = new SimpleDateFormat("yyyyMMddHHmmss");
    	//変数定義
    	String conversionDate = dateTime;

    	//タイムゾーンが設定される場合は変換を行う
    	if(timeZone != null){
        	//タイムゾーンの取得
        	TimeZone tzn = TimeZone.getTimeZone(timeZone);
        	//タイムゾーンのセット
        	fmtTimeZone.setTimeZone(tzn);
        	//変換
        	try{
        		conversionDate= fmtTimeZone.format(fmtDateTime.parse(conversionDate));
        	}catch(ParseException e){
        		e.printStackTrace();
        	}
        }
    	return conversionDate;
    }
}
